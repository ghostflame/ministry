.\" Ministry config manual page
.TH MINISTRY.CONF "5" "Nov 2015" "Networking Utilities" "Configuration Files"
.SH NAME
ministry.conf \- ministry stats daemon config file
.SH SYNOPSIS
.nf
.BI /etc/ministry/ministry.conf
.fi
.SH DESCRIPTION
.PP
This manual page describes the configuration file for \fBministry(1)\fR.  The file is in sections,
and including other files is permitted, though wildcard expansion is not performed - included file
paths must be complete.  Config is read before \fBministry\fR changes directory to it's configured
base directory, so non-absolute paths included are interpreted relative to the current working
directory.
.PP
The sections are used to define a context; this context is used to decide which interpreter function
examines the config line.  This means that config names are essentially namespaced to the section
in which they are found, and as such names may be present in more than one section.  Section names
are not case sensitive.  In fact, only values are case-preserving - all config variable names are
examined case-insensitively.
.SH FORMAT
.SS Section Format
.PP
Sections are expected to be presented inside square brackets.  Valid sections are:  \fBmain\fR,
\fBlogging\fR, \fBnetwork\fR, \fBmemory\fR, \fBsynth\fR, \fBtarget\fR and \fBstats\fR.  e.g.
.PP
\fB[Logging]\fR
.SS Line Format
.PP
Config lines are expected to follow \fBvariable\fR = \fIvalue\fR
.PP
Whitespsace is trimmed fore and aft, and from around the = sign.  If the = and value are absent,
then the value "1" is automatically filled in.  This is useful for switching behaviour on.  Many
config variables contain dots.  Wherever lists of values are permitted, they should be
comma-separated without intervening spaces.  e.g.
.PP
\fBstats.udp.ports = 8100,8101,8102,8103\fR
.SS Bools
.PP
Anything marked as a boolean accepts the following responses as true to (case insenstive) "true",
"y", "yes" or any non-zero number.  Any other value is taken as false.
.SS File Inclusion
Ministry can read in other config files using an \fBinclude\fR = \fIfilename\fR directive.
.SH CONFIG
.PP
The config variables accepted by \fBministry\fR are presented here by section.
.SS (Anywhere)
.PP
These values can appear in any section.  Just include for now.
.TP
\fBinclude\fR
The name of another file to read in.  \fBMinistry\fR will refuse to read what it believes is the
same file twice - it could be fooled with symlinks or multiple hardlinks.  This is a protection
against circular includes.  Included files are read in depth-first, meaning reading the current
file is paused until the included file is read (possibly recursively).  This is important for any
duplication of config values, as the last one read will win.  If include is found within a section,
that section context is preserved into the new file, until it is changed by a new section heading.
.SS [Main]
.PP
These are a few unsectioned variables controlling overall \fBministry\fR behaviour.
.TP
\fBtick_msec\fR
Overall internal tick time in msec.  Controls internal time accuracy (default 20)
.TP
\fBdaemon\fR
Whether \fBministry\fR disconnects from the controlling terminal with the daemon(2) system call
(boolean, default 0).  This can also be switched on with the -d CLI option.
.TP
\fBpidfile\fR
Filename \fBministry\fR will write its process ID to (default /var/run/ministry.pid).  This can also
be overriden with the -p <file> CLI option.
.TP
\fBlimits.TYPE\fR
Make a call to setrlimit for the specified type.  Supported types are \fBprocs\fR and \fBfiles\fR.
Both default to the system hard limit of the type.
.SS [Logging]
.TP
\fBfilename\fR | \fBfile\fR | \fBlogfile\fR
File name to write the log to.
.TP
\fBlevel\fR
Log level, one of FATAL, ERR, WARN, NOTICE, INFO or DEBUG.
.TP
\fBnotify\fR
Add a notification of log re-opening.  Guarantees a non-zero log file size after log rotation (boolean,
default 1).
.SS [Memory]
.TP
\fBmax_mb\fR | \fBmax_size\fR
Maximum in-memory size (in MB) before \fBministry\fR self-terminates (default 10GB).
.TP
\fBmax_kb\fR
As above, but expressed in KB.
.TP
\fBinterval\fR | \fBmsec\fR
Memory size check interval, in milliseconds (default 5000)
.TP
\fBhashsize\fR
This is the size that types will default to for their hash table size.  This is a quick way of setting
all three types.  It should be of the same order of magnitude as the expected number of paths.  Prime
numbers are recommended to prevent large numbers of hash collisions (default 100003)
.TP
\fBstacksize\fR
This is the thread stack size (in KB).  This is mainly used during debugging to control VSS where there
might be a lot of threads (from client connections mostly).  Best not mess with this (default 128).
.TP
\fBgc\fR
Whether gc is enabled or not (boolean, default 1).
.TP
\fBgc_thresh\fR
How many submission cycles a path must lie empty for before it is deleted (default 8640).
.TP
\fBgc_gauge_thresh\fR
How many submission cycles a gauge must not be updated for before it is deleted (default 25960).
.SS [Stats]
.TP
\fBthresholds\fR
A list of integer percentage values to generate thresholds at.  Must be 0 < x < 100.
.TP
\fBtimestamps\fR
What format of timestamps should be outputted.  Options are: sec, msec, usec, nsec, dotmsec, dotusec, dotnsec.
.PP
The rest of these are of the form stats.XXX, adder.XXX, gauge.XXX or self.XXX, affecting the behaviour of
stats reporting, adder reporting, gauge reporting or self reporting.
.TP
\fBTYPE.threads\fR
How many reporting threads to run (not used for self) (default 2)
.TP
\fBTYPE.enable\fR
Enable or disable this reporting (boolean, defaults to 1 for all)
.TP
\fBTYPE.size\fR
Hashsize information for this type.  Not used for self.  Tells \fBministry\fR how to size the hash table
for metrics.  The number of metrics can exceed this size, but it can result in performance deteriorating.
There are five set values: \fBtiny\fR, \fBsmall\fR, \fBmedium\fR, \fBlarge\fR, and \fBxlarge\fR.  It can
also accept a number, which is taken as the hash table size.  Prime numbers are recommended here, despite
the apparent memory-friendly attraction of powers of two (that results in poor hashing behaviour, as the
hash function does limited bit-mixing).  Each type's hash size defaults to the global value.  If all three
are set, then the global value is not used anywhere.
.TP
\fBTYPE.prefix\fR
Prefix string for all metrics of this type.  (defaults:  stats.timers., (blank), stats.gauges. and
stats.ministry.)
.TP
\fBTYPE.period\fR
Reporting interval, in msec.  (default 10000 for all)
.TP
\fBTYPE.delay\fR
Reporting delay, in msec.  \fBMinistry\fR's timing loop aligns reporting intervals to the clock, so,
e.g. 10 second reporting would occur on 10-second boundaries.  The delay must be less than the period
and is used to offset reporting into that interval.  This is useful when systems report data to
\fBministry\fR on their own timing cycle but metrics may or may not make it into a given interval.
So if a reporting system submits adder data every 10 seconds, and \fBministry\fR reports every 10
seconds, it might be prudent to set an offset of 3 or 4 seconds, so that all data for the interval
is in and recorded by the interval is closed (defaults are 0 for all).
.SS [Target]
.PP
Target configs are a block, ending in a \fBdone\fR statement.  They can repeat as needed.
.PP
Both Graphite and InfluxDB are sent to using graphite line-based protocol.  Coal receives nanosecond
timestamps but is otherwise the same.  OpenTSDB is sent using the telnet protocol.
.TP
\fBtype\fR
Type of target.  Must be one of the known supported types:  graphite, influxdb, coal, opentsdb.
.TP
\fBhost\fR
Hostname or IP address.  Names are looked up using normal DNS resolution.  The special string '-' will
result in ministry writing to \fIstdout\fR and disable daemon mode.  Multiple targets writing to \fIstdout\fR
will result in an error parsing config.
.TP
\fBport\fR
Port the target is listening on.  Only TCP is supported as yet.  If this is not supplied, \fBministry\fR
can guess the port for some types.
.TP
\fBmax\fR
Maximum waiting buffers when the host is unresponsive.  Between 1 and 64K.  The default is 128.
.TP
\fBdone\fR
No value; signifies the end of the target config block.
.SS [Network]
.TP
\fBtimeout\fR
Number of seconds a client connection must have been silent for before being considered dead.
.TP
\fBrcv_tmout\fR
Number of seconds to set on UDP sockets for SO_RCVTIMEO (prevents receive blocking indefinitely).
.TP
\fBreconn_msec\fR
Time to wait, in msec, before attempting reconnect to onward targets (default 3000).
.TP
\fBio_msec\fR
How often, in msec, to perform asynchronous IO flushes to onward targets (default 500).
.TP
\fBmax_waiting\fR
Maximum number of IO buffers to permit to be waiting for flush to one target.  Each buffer can hold
256KB but frequently holds much less.  Accounting is still done by number of buffers (default 1024).
.TP
\fBprefix\fR
Assigns prefixes to hosts, IPs or networks.  Hostnames are looked up and first IPv4 address taken.
Networks are expected as a.b.c.d/x (where the specified address is not the base of the network, the
masking will select the network base, so 127.0.3.1/8 is the same as 127.0.0.0/8.  The argument should
have a space separating the host specifier and the prefix.  The prefix should have a trailing . but
will be given one if absent.  This prefix is prepended to incoming paths at time of network read and
so any later behaviour will need to account for it.  This config key can be repeated.  \fBNote, this
does not work for UDP packets - the mechanism would be very DoS'able.\fR
.PP
IP address blacklisting and whitelisting is done, as with prefixes, on IP, network or hostnames.  IP
addresses (and resolved names) are checked first, and then networks \fBin the order they appear\fR.
This allows for complex allow/deny decisions - provided the most specific networks come first.
.TP
\fBipcheck.enable\fR
Enable the IP checking code.  Without this set, no checks are performed (boolean, default is 0).
.TP
\fBipcheck.drop\fR
Default drop connections which do not match a rule (boolean, default is 0).
.TP
\fBipcheck.verbose\fR
Report on the ruleset in the log, and log on denied connections (boolean, default is 0).
.TP
\fBipcheck.whitelist\fR
Specifically allow the listed host, IP or network.
.TP
\fBipcheck.blacklist\fR
Specifically deny the listed host, IP or network.
.PP
All remaining network variables are of the form stats.XXX, compat.XXX, gauge.XXX or adder.XXX, pertaining
to new-style stats ports, statsd-compatible ports, new-style gauge ports or new-style adder ports.
.TP
\fBTYPE.enable\fR
Enable or disable this type of collection (boolean, defaults to 1 for all).
.TP
\fBTYPE.label\fR
Label these ports have within logging.
.TP
\fBTYPE.tcp.backlog\fR
Backlog for incoming TCP connections (default 32).
.TP
\fBTYPE.udp.checks\fR
Perform blacklist/whitelist checks and prefixing on UDP for this type.
.PP
Everything after this is of the form TYPE.udp.XXX or TYPE.tcp.XXX, pertaining to either UDP ports
or TCP ports respectively.
.TP
\fBTYPE.PROTO.bind\fR
Bind address for this type and protocol - must be a local IP address (default IPADDR_ANY)
.TP
\fBTYPE.PROTO.enable\fR
Enable or disable his protocol for this type of collection (boolean, defaults to 1).
.TP
\fBTYPE.PROTO.port\fR
A list of listen ports, comma separated.  By default, statsd-compatible listens on 8125, the default
statsd port, new-style stats is on 9125 and new-style adder is on 9225.
.SS [Synth]
.PP
Synthetic metrics are derived from submitted metrics and calculated at the point of downstream
metric generation.  The generating function has two phases, gathering and calculation.  After it
has gathered the metrics from the paths (allowing new data to accrue) it then performs synthetic
metric calculations.
.PP
Synthetics config comes in blocks, terminated by 'done' on a line on its own.  Each must have a
target path and at least one source (some operations need two), and an operation specifier.  There
may also be a static factor applied to the metric (this makes percentages easy to generator - just
set factor to 100).
.PP
There is no limit to the number of synthetics that are specified.  They do not take wildcards
(ministry has no wildcard search mechanism and it would be astonishingly expensive in large data
sets - it would have to check what matched every submission interval).
.TP
\fBtarget\fR
The metric path to create.
.TP
\fBsource\fR
A source path to take values from.
.TP
\fBoperation\fR
Operation to perform.  One of sum, diff, ratio, min, max, spread, mean or count.
.TP
\fBfactor\fR
A double precision number that the synthetic metric value is multiplied by.  Default 1.
.TP
\fBdone\fR
No value - signifies the end of the synthetic block.  Error checking on source count is performed
when this config line is found.  Subsequent lines are taken to be a new synthetic block.
.SS Synthetic Operation Types
.TP
\fBsum\fR
The sum of the values of all source metrics.
.TP
\fBdiff\fR
The value of second metric is subtracted from the value of the first.
.TP
\fBratio\fR
The value of the first metric is divided by the value of the second (or zero if the second metric
value is zero).
.TP
\fBmin\fR
The lowest of all source metric values.
.TP
\fBmax\fR
The highest of all source metric values.
.TP
\fBspread\fR
The gap between the highest and lowest source metric values.
.TP
\fBmean\fR
The arithmetic mean of the values of all source metrics.
.TP
\fBcount\fR
The number of source metrics with a non-zero value.
.TP
\fBactive\fR
Returns 0 or 1 depending on whether any data points were present.
.SH SEE ALSO
.BR ministry (1)
.SH AUTHOR
\fBMinistry\fP is written and maintained by John Denholm, Sky Betting And Gaming.
