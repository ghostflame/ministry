Math.ksum = function( floatArray ) {

    if( ! Array.isArray( floatArray ) ) {
        return 0;
    }

    var sum = 0.0;  // sum
    var res = 0.0;  // residue
    var adj;        // adjusted value
    var prop;       // proposed new sum

    for( var i = 0; i < floatArray.length; i++ ) {

        adj  = floatArray[i] - res;     // starts off with c = 0
        prop = sum + adj;               // sum is big, drops low-order data
        res  = ( prop - sum ) - adj;    // (prop-sum) is high-order of adj
        sum  = prop;                    // algebraically, res is always 0

        // then the next time, the residue is subtracted from sum
    }

    return sum;
}


// either return "X thing(s)" or just ( '' || 's' )
Number.prototype.plural = function( str ) {

    var k = this.valueOf( );
    var c = 's';

    if( k === 1 ) {
        c = '';
    }

    if( str ) {
        return k + ' ' + str + c;
    }

    return c;
};

