function json_objsort( obj ) {

    if( obj === null || obj == undefined ) {
        return null;
    }

    if( obj.constructor === Array ) {

        var ret = [ ];

        for( var i = 0; i < obj.length; i++ ) {
            ret[i] = json_objsort( obj[i] );
        }

        return ret;
    }

    if( obj.constructor === Object ) {

        var keys = Object.keys( obj ).sort( );
        var ret  = { };

        for( var i = 0; i < keys.length; i++ ) {
            ret[keys[i]] = json_objsort( obj[keys[i]] );
        }

        return ret;
    }

    return obj;
}

JSON.makeNice = function( obj, sep ) {
    return this.stringify( json_objsort( obj ), null, ( sep || '\t' ) );
};

JSON.readFile = function( file, logger, fs ) {

    var ob = { };

    if( !fs ) {
        fs = require( 'fs' );
    }

    try {
        var txt = fs.readFileSync( file, { encoding: 'utf8' } );
        ob = this.parse( txt );
    } catch( e ) {
        if( logger ) {
            logger.error( 'Unable to read file ' + file + ': ' + e );
        } else {
            console.error( 'Unable to read file ' + file + ': ' + e );
        }
        return null;
    }

    return ob;
};

